- name: configure repose for {{COMPONENT}}
  ansible.builtin.copy:
    src: "{{COMPONENT}}_repos"
    dest: /etc/yum.repos.d/mysql.repo

- name: "installing {{COMPONENT}} server"
  ansible.builtin.yum:
    name:
      - mysql-community-server
      - MySQL-python
    state: installed


- name: "starting {{COMPONENT}} server"
  ansible.builtin.systemd:
    name: mysqld
    state: restarted
    enabled: yes

- name: check db password by collecting information
  community.mysql.mysql_info:
    login_user: root
    login_password: RoboShop@1
  register: mysql_state
  ignore_errors: yes

#- debug:
#    msg: "{{mysql_state}}"

- name: reset password block
  when: mysql_state.failed
  block:
    - name: grab default password
      ansible.builtin.shell: grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'
      register: DEFAULT_ROOT_PASSWORD

    - name: copy the sql password reset file
      ansible.builtin.copy:
        src: rootpass.sql
        dest: /tmp/rootpass.sql

    - name: reset mysql password
      ansible.builtin.shell: mysql --connect-expired-password -uroot -p"{{DEFAULT_ROOT_PASSWORD.stdout}}" </tmp/rootpass.sql

- name: check the validate password plugin
  ansible.builtin.shell: echo show plugins | mysql -uroot -pRoboShop@1 | grep validate_password
  register: plugin_state
  ignore_errors: yes

- name: uninstall password validate pligin
  when: plugin_state.rc == 0
  block:
    - name: copy sqlfile to uninstall plugin
      ansible.builtin.copy:
         src: pass-validate.sql
         dest: /tmp/pass-validate.sql
    - name: uninstall plugin
      ansible.builtin.shell: mysql --connect-expired-password -uroot -pRoboShop@1 </tmp/pass-validate.sql

- name: unarchive mysql schema
  ansible.builtin.unarchive:
    src: https://github.com/roboshop-devops-project/mysql/archive/main.zip
    dest: /tmp
    remote_src: yes

- name: load schema into mysql
  ansible.builtin.shell: mysql -u root -pRoboShop@1 < /tmp/mysql-main/shipping.sql
